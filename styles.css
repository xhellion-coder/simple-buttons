/* Reset margins, paddings, and box-sizing for all elements */
*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* Container for all buttons */
.buttons {
    min-height: 100dvh;
    display: flex;
    background: #000;
    align-items: center;
    justify-content: center;
    gap: 30px;
    flex-wrap: wrap;
}

/* Base button styling */
.btn {
    border: none;
    font-size: 28px;
    color: #fff;
    background-color: transparent;
    cursor: pointer;
}

/* === Button 1 === */
/* Bordered button with expanding background effect */
.btn-1 {
    border: 3px solid #fff;
    padding: 10px 20px;
    border-radius: 20px;
    position: relative;
    transition: all 0.3s ease-in-out;
}

.btn-1:hover {
    color: #000;
}

/* Ensure text is above the background animation */
.btn-1 span {
    position: relative;
    z-index: 1;
}

/* White background grows from left to right on hover */
.btn-1::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #fff;
    border-radius: 15px;
    transform: scaleX(0);
    transition: transform 0.3s ease-in-out;
    z-index: 0;
}

.btn-1:hover::before {
    transform: scaleX(1);
}

/* === Button 2 === */
/* Button with inner glowing shadow and hover lift */
.btn-2 {
    border: 3px solid #fff;
    padding: 10px 20px;
    border-radius: 10px;
    box-shadow: 0 0 5px 2px #fff inset;
    transition: all 0.3s ease-in-out;
}

.btn-2:hover {
    box-shadow: 0 0 5px 3px #fff inset,
                0px 4px 0 0 rgba(255, 255, 255, 0.801);
    transform: translateY(-5px);
}

.btn-2:active {
    box-shadow: 0 0 0px 0px inset;
    transition: .1s all ease;
    transform: translateY(0);
}

/* === Button 3 === */
/* Border animation with moving corner decorations */
.btn-3 {
    border: 5px solid #fff;
    padding: 10px 25px;
    border-radius: 2px;
    position: relative;
}

/* Decorative bars that animate position on hover */
.btn-3::after,
.btn-3::before {
    background: #000;
    position: absolute;
    content: '';
    width: 13%;
    height: 6px;
    top: -5px;
    left: 15px;
    transition: .4s all ease;
    transform: skew(10deg);
}

/* Bottom bar (before) starts on the right */
.btn-3::before {
    bottom: -5px;
    top: auto;
    left: 100px;
    transform: skew(-10deg);
}

/* Swap positions of top and bottom bars on hover */
.btn-3:hover:after {
    left: 100px;
    transform: skew(-10deg);
}

.btn-3:hover::before {
    left: 15px;
    transform: skew(10deg);
}

/* === Button 4 === */
/* Underline effect that expands from right to left */
.btn-4 {
    padding: 5px 12px;
    position: relative;
}

.btn-4::after {
    content: '';
    width: 100%;
    transform: scaleX(0);
    height: 4px;
    background-color: #fff;
    position: absolute;
    left: 0;
    transform-origin: right;
    bottom: 0;
    transition: transform .5s ease;
}

.btn-4:hover::after {
    transform: scaleX(1);
    transform-origin: left;
}

/* === Button 5 === */
/* Button with sequential rounded corners animation */
.btn-5 {
    padding: 8px 18px;
    border-radius: 0px;
    transition: border-top-left-radius .3s ease,
                border-top-right-radius .4s ease .2s,
                border-bottom-left-radius .4s ease .1s,
                border-bottom-right-radius .4s ease;
    border: 5px solid #fff;
}

/* On hover, all corners round with a delay effect */
.btn-5:hover {
    transition: border-top-left-radius .4s ease,
                border-top-right-radius .4s ease .1s,
                border-bottom-left-radius .4s ease .2s,
                border-bottom-right-radius .4s ease .3s;
    border-radius: 30px;
}

/* === Button 6 === */
/* 3D rotation effect where only border rotates */
.btn-6 {
    padding: 8px 18px;
    border: 5px solid #fff;
    transition: transform 1s;
    display: inline-block;
    color: #fff;
}

/* Button rotates 180 degrees on hover */
.btn-6:hover {
    transform: rotateY(180deg);
}

/* Span inside rotates in opposite direction to stay visually static */
.btn-6 span {
    transition: transform 1s ease;
    display: inline-block;
}

/* This class should be added to span if rotation compensation is needed */
.btn-6:hover .rotate {
    transform: rotateY(-180deg);
}
